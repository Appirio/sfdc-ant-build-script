<project name="SFDCDeployment" default="test" basedir="." xmlns:sf="antlib:com.salesforce">

  <!-- Place build.properties file two directories up from current location -->
  <!-- enabling you to work in a shared folder with subfolders for each deployment -->
  <property file="../../build.properties" />
  <property environment="env" />

  <!-- FUTURE SYNTAX: ant source2target -Dsource=dev -Dtarget=qa -Dversion=3.6 -->
  <!--
    <target name="source2target">
      <antcall target="source2local">
        <param name="source" value="dev"/>
        <param name="version" value="${version}"/>
      </antcall>
      <antcall target="local2target">
        <param name="source" value="dev"/>
        <param name="target" value="qa"/>
        <param name="version" value="${version}"/>
      </antcall>
    </target>
-->

  <scriptdef name="scepcificTest" language="javascript">
    <attribute name="cmcuser"/>
    <attribute name="cmcpass"/>
    <attribute name="serverurl"/>
    <![CDATA[
    	//*** CREATE DEPLOY TASK ****
		var deployTask = project.createTask('antlib:com.salesforce:deploy');
		var username = attributes.get("cmcuser");
		var password = attributes.get("cmcpass");
		var serverurl = attributes.get("serverurl");
		var source = project.getProperty("source");
		var version = project.getProperty("version");
		var specifiedTest = project.getProperty("specifiedTests");
		
		if(username!=null && password!=null && serverurl!=null && source!=null && version!=null && specifiedTest!=null){
			deployTask.setUsername(username);
			deployTask.setPassword(password);
    	    deployTask.setServerURL(serverurl);
    	    deployTask.setDeployRoot(source + " sprint " + version);
    	    deployTask.setTestLevel("RunSpecifiedTests");
    	    deployTask.setMaxPoll("5000");
    	  	deployTask.setPollWaitMillis("20000");
			
    		//*** Configure checkOnly ***
    		if (project.getProperty("checkOnly")=="true"){
    	  		deployTask.setCheckonly(true);
    		}
    		else{
    	  		deployTask.setCheckonly(false);
    		}
			
    		//*** Prepare list of test classes ***
    		if (specifiedTest) {
    			deployTask.setTestLevel('RunSpecifiedTests');
    			var tests = specifiedTest.split(',');
				
  				//*** Prepare runTest tags ****
  				var runTest = deployTask.getClass().getClassLoader().loadClass("com.salesforce.ant.DeployTask$CodeNameElement");
  				for (var i = 0; i < tests.length; i++) {
  	        		var rt = runTest.newInstance();
  					rt.addText(tests[i]);
  					deployTask.addRunTest(rt);
  				}
			}
    		//*** Execute deploy task ***
    		deployTask.execute();
		}
    	//**** DONE *****************
	]]>
  </scriptdef>

  <!-- SYNTAX: ant qa2full -Dversion=3.6    optional: -DcheckOnly=true -DrunAllTests=true-->
  <target name="qa2full">
    <antcall target="qa2local">
      <param name="source" value="qa" />
      <param name="version" value="${version}" />
    </antcall>
    <antcall target="local2full">
      <param name="source" value="qa" />
      <param name="version" value="${version}" />
      <param name="checkOnly" value="${checkOnly}" />
      <param name="runAllTests" value="${runAllTests}" />
    </antcall>
  </target>

  <!-- SYNTAX: ant full2prodfix -Dversion=3.6    optional: -DcheckOnly=true -DrunAllTests=true-->
  <target name="full2prodfix">
    <antcall target="full2local">
      <param name="source" value="full" />
      <param name="version" value="${version}" />
    </antcall>
    <antcall target="local2prodfix">
      <param name="source" value="full" />
      <param name="version" value="${version}" />
      <param name="checkOnly" value="${checkOnly}" />
      <param name="runAllTests" value="${runAllTests}" />
    </antcall>
  </target>

  <!-- SYNTAX: ant itdev2full -Dversion=3.6    optional: -DcheckOnly=true -DrunAllTests=true-->
  <target name="itdev2full">
    <antcall target="itdev2local">
      <param name="source" value="dev" />
      <param name="version" value="${version}" />
    </antcall>
    <antcall target="local2full">
      <param name="source" value="dev" />
      <param name="version" value="${version}" />
      <param name="checkOnly" value="${checkOnly}" />
      <param name="runAllTests" value="${runAllTests}" />
    </antcall>
  </target>

  <!-- SYNTAX: ant itdev2full-specified-tests -Dversion=3.6 -DspecifiedTests=PresalesRequestHandler_Test    optional: -DcheckOnly=true -DrunAllTests=true-->
  <target name="itdev2full-specified-tests">
    <antcall target="itdev2local">
      <param name="source" value="dev" />
      <param name="version" value="${version}" />
    </antcall>
    <antcall target="local2full-specified-tests">
      <param name="source" value="dev" />
      <param name="version" value="${version}" />
      <param name="checkOnly" value="${checkOnly}" />
      <param name="specifiedTests" value="${specifiedTests}" />
    </antcall>
  </target>

  <!-- SYNTAX: ant dev2qa -Dversion=3.6    optional: -DcheckOnly=true -DrunAllTests=true-->
  <target name="dev2qa">
    <antcall target="dev2local">
      <param name="source" value="dev" />
      <param name="version" value="${version}" />
    </antcall>
    <antcall target="local2qa">
      <param name="source" value="dev" />
      <param name="version" value="${version}" />
      <param name="checkOnly" value="${checkOnly}" />
      <param name="runAllTests" value="${runAllTests}" />
    </antcall>
  </target>

  <!-- SYNTAX: ant qa2prod -Dversion=3.6    optional: -DcheckOnly=true -DrunAllTests=true-->
  <target name="qa2prod">
    <antcall target="qa2local">
      <param name="source" value="qa" />
      <param name="version" value="${version}" />
    </antcall>
    <antcall target="local2prod">
      <param name="source" value="qa" />
      <param name="version" value="${version}" />
      <param name="checkOnly" value="${checkOnly}" />
      <param name="runAllTests" value="${runAllTests}" />
    </antcall>
  </target>

  <!-- SYNTAX: ant full2prod -Dversion=3.6    optional: -DcheckOnly=true -DrunAllTests=true-->
  <target name="full2prod">
    <antcall target="full2local">
      <param name="source" value="full" />
      <param name="version" value="${version}" />
    </antcall>
    <antcall target="local2prod">
      <param name="source" value="full" />
      <param name="version" value="${version}" />
      <param name="checkOnly" value="${checkOnly}" />
      <param name="runAllTests" value="${runAllTests}" />
    </antcall>
  </target>

  <!-- SYNTAX: ant full2prod-specified-tests -Dversion=3.6 -DspecifiedTests=PresalesRequestHandler_Test   optional: -DcheckOnly=true -DrunAllTests=true-->
  <target name="full2prod-specified-tests">
    <antcall target="full2local">
      <param name="source" value="full" />
      <param name="version" value="${version}" />
    </antcall>
    <antcall target="local2prod-specified-tests">
      <param name="source" value="full" />
      <param name="version" value="${version}" />
      <param name="checkOnly" value="${checkOnly}" />
      <param name="specifiedTests" value="${specifiedTests}" />
    </antcall>
  </target>

  <!-- SYNTAX: ant prodfix2prod -Dversion=3.6    optional: -DcheckOnly=true -DrunAllTests=true-->
  <target name="prodfix2prod">
    <antcall target="prodfix2local">
      <param name="source" value="prodfix" />
      <param name="version" value="${version}" />
    </antcall>
    <antcall target="local2prod">
      <param name="source" value="prodfix" />
      <param name="version" value="${version}" />
      <param name="checkOnly" value="${checkOnly}" />
      <param name="runAllTests" value="${runAllTests}" />
    </antcall>
  </target>


  <!-- SYNTAX: ant itdev2local -Dversion=3.10d -Dsource=dev -->
  <target name="itdev2local">
    <mkdir dir="${source} sprint ${version}" />
    <sf:retrieve
      username="${it.dev.username}"
      password="${it.dev.password}"
      serverurl="https://test.salesforce.com"
      pollWaitMillis="10000"
      maxPoll="5000"
      unpackaged="package-${version}.xml"
      retrieveTarget="${source} sprint ${version}" />
  </target>

  <!-- dev2qa commands ****************** -->

  <!-- SYNTAX: ant dev2local -Dversion=3.10d -Dsource=dev -->
  <target name="dev2local">
    <mkdir dir="${source} sprint ${version}" />
    <sf:retrieve
      username="${cmc.dev.username}"
      password="${cmc.dev.password}"
      serverurl="https://test.salesforce.com"
      pollWaitMillis="10000"
      maxPoll="5000"
      unpackaged="package-${version}.xml"
      retrieveTarget="${source} sprint ${version}" />
  </target>

  <!-- SYNTAX: ant backup-qa -Dtype=package|destructiveChanges -Dversion=3.6 change for story S-502094 starts-->
  <target name="backup-qa" depends="check-files-exist" if="${type}.exists">
    <mkdir dir="qa backup ${type}-${version}" />
    <sf:retrieve
      username="${cmc.qa.username}"
      password="${cmc.qa.password}"
      serverurl="${sandbox.serverurl}"
      pollWaitMillis="10000"
      maxPoll="5000"
      unpackaged="${type}-${version}.xml"
      retrieveTarget="qa backup ${type}-${version}" />
  </target>

  <!-- SYNTAX: ant local2qa -Dversion=3.6 -Dsource=dev    optional: -DcheckOnly=true -DrunAllTests=true -->
  <target name="local2qa">
    <antcall target="backup-qa">
        <param name="version" value="${version}" />
        <param name="type" value="package" />
    </antcall>
    <antcall target="backup-qa">
        <param name="version" value="${version}" />
        <param name="type" value="destructiveChanges" />
    </antcall>
    <antcall target="copy-destructiveChanges">
      <param name="version" value="${version}" />
      <param name="source" value="${source}" />
    </antcall>
    <sf:deploy
      username="${cmc.qa.username}"
      password="${cmc.qa.password}"
      serverurl="https://test.salesforce.com"
      pollWaitMillis="20000"
      maxPoll="5000"
      checkOnly="${checkOnly}"
      runAllTests="${runAllTests}"
      deployRoot="${source} sprint ${version}"
    />
  </target>
  
  <!-- SYNTAX: ant local2dev-specified-tests -Dversion=3.6 -Dsource=qa -DspecifiedTests=TestClass1,TestClass2   optional: -DcheckOnly=true -DrunAllTests=true -->
  <target name="local2qa-specified-tests">
      <!-- backup qa first -->
      <antcall target="backup-qa">
        <param name="version" value="${version}" />
        <param name="type" value="package" />
      </antcall>
      <antcall target="backup-qa">
        <param name="version" value="${version}" />
        <param name="type" value="destructiveChanges" />
      </antcall>
      <antcall target="copy-destructiveChanges">
        <param name="version" value="${version}" />
        <param name="source" value="${source}" />
      </antcall>
  	<!-- deploy script -->
  	<scepcificTest cmcuser="${cmc.full.username}" cmcpass="${cmc.full.password}" serverurl="${sandbox.serverurl}"/>
  </target>
  

  <!-- SYNTAX: ant backup-full -Dtype=package|destructiveChanges -Dversion=3.6 change for story S-502094 starts -->
  <target name="backup-full" depends="check-files-exist" if="${type}.exists">
    <mkdir dir="full backup ${type}-${version}" />
    <sf:retrieve
      username="${cmc.full.username}"
      password="${cmc.full.password}"
      serverurl="${sandbox.serverurl}"
      pollWaitMillis="10000"
      maxPoll="5000"
      unpackaged="${type}-${version}.xml"
      retrieveTarget="full backup ${type}-${version}" />
  </target>

  <!-- SYNTAX: ant local2full -Dversion=3.6 -Dsource=dev    optional: -DcheckOnly=true -DrunAllTests=true -->
  <target name="local2full">
    <antcall target="backup-full">
        <param name="version" value="${version}" />
        <param name="type" value="package" />
	</antcall>
    <antcall target="backup-full">
        <param name="version" value="${version}" />
        <param name="type" value="destructiveChanges" />
    </antcall>
	<antcall target="copy-destructiveChanges">
      	<param name="version" value="${version}" />
      	<param name="source" value="${source}" />
	</antcall>
    <sf:deploy
      username="${cmc.full.username}"
      password="${cmc.full.password}"
      serverurl="${sandbox.serverurl}"
      pollWaitMillis="20000"
      maxPoll="5000"
      checkOnly="${checkOnly}"
      runAllTests="${runAllTests}"
      deployRoot="${source} sprint ${version}"
    />
  </target>
  
<!-- SYNTAX: ant local2full-specified-tests -Dversion=3.6 -Dsource=qa -DspecifiedTests=TestClass1,TestClass2   optional: -DcheckOnly=true -DrunAllTests=true -->
<target name="local2full-specified-tests">
    <!-- backup full first -->
    <antcall target="backup-full">
      <param name="version" value="${version}" />
      <param name="type" value="package" />
    </antcall>
    <antcall target="backup-full">
      <param name="version" value="${version}" />
      <param name="type" value="destructiveChanges" />
    </antcall>
    <antcall target="copy-destructiveChanges">
      <param name="version" value="${version}" />
      <param name="source" value="${source}" />
    </antcall>
	<!-- deploy script -->
	<scepcificTest cmcuser="${cmc.full.username}" cmcpass="${cmc.full.password}" serverurl="${sandbox.serverurl}"/>
</target>

  <!-- qa2prod commands ****************** -->

  <!-- SYNTAX: ant qa2local -Dversion=3.8 -Dsource=qa -->
  <target name="qa2local">
    <mkdir dir="${source} sprint ${version}" />
    <sf:retrieve
      username="${cmc.qa.username}"
      password="${cmc.qa.password}"
      serverurl="${sandbox.serverurl}"
      pollWaitMillis="10000"
      maxPoll="5000"
      unpackaged="package-${version}.xml"
      retrieveTarget="${source} sprint ${version}" />
  </target>

  <!-- SYNTAX: ant full2local -Dversion=3.8 -Dsource=full -->
  <target name="full2local">
    <mkdir dir="${source} sprint ${version}" />
    <sf:retrieve
      username="${cmc.full.username}"
      password="${cmc.full.password}"
      serverurl="${sandbox.serverurl}"
      pollWaitMillis="10000"
      maxPoll="5000"
      unpackaged="package-${version}.xml"
      retrieveTarget="${source} sprint ${version}" />
  </target>

  <!-- SYNTAX: ant backup-prod -Dtype=package|destructiveChanges -Dversion=3.6 -->
  <target name="backup-prod" depends="check-files-exist" if="${type}.exists">
    <mkdir dir="prod backup ${type}-${version}" />
    <sf:retrieve
      username="${cmc.prod.username}"
      password="${cmc.prod.password}"
      serverurl="${prod.serverurl}"
      pollWaitMillis="10000"
      maxPoll="5000"
      unpackaged="${type}-${version}.xml"
      retrieveTarget="prod backup ${type}-${version}" />
  </target>

  <!-- SYNTAX: ant check-files-exist -Dversion=3.6 -->
  <target name="check-files-exist">
    <available
      file="package-${version}.xml"
      property="package.exists" />
    <available
      file="destructiveChanges-${version}.xml"
      property="destructiveChanges.exists" />
  </target>

  <!-- SYNTAX: ant copy-destructiveChanges -Dversion=3.6 -Dsource=full -->
  <target name="copy-destructiveChanges" depends="check-files-exist" if="destructiveChanges.exists">
    <copy file="destructiveChanges-${version}.xml" tofile="${source} sprint ${version}/destructiveChanges.xml"/>
  </target>

  <!-- SYNTAX: ant local2prod -Dversion=3.6 -Dsource=qa    optional: -DcheckOnly=true -DrunAllTests=true -->
  <target name="local2prod">
    <!-- backup prod first -->
    <antcall target="backup-prod">
      <param name="version" value="${version}" />
      <param name="type" value="package" />
    </antcall>
    <antcall target="backup-prod">
      <param name="version" value="${version}" />
      <param name="type" value="destructiveChanges" />
    </antcall>
    <antcall target="copy-destructiveChanges">
      <param name="version" value="${version}" />
      <param name="source" value="${source}" />
    </antcall>
    <sf:deploy
      username="${cmc.prod.username}"
      password="${cmc.prod.password}"
      serverurl="${prod.serverurl}"
      pollWaitMillis="20000"
      maxPoll="5000"
      checkOnly="${checkOnly}"
      runAllTests="${runAllTests}"
      deployRoot="${source} sprint ${version}" />
  </target>

  <!-- SYNTAX: ant local2prod-specified-tests -Dversion=3.6 -Dsource=qa -DspecifiedTests=TestClass1,TestClass2   optional: -DcheckOnly=true -DrunAllTests=true -->
  <target name="local2prod-specified-tests">
      <!-- backup prod first -->
      <antcall target="backup-prod">
        <param name="version" value="${version}" />
        <param name="type" value="package" />
      </antcall>
      <antcall target="backup-prod">
        <param name="version" value="${version}" />
        <param name="type" value="destructiveChanges" />
      </antcall>
      <antcall target="copy-destructiveChanges">
        <param name="version" value="${version}" />
        <param name="source" value="${source}" />
      </antcall>
  	<!-- deploy script -->
  	<scepcificTest cmcuser="${cmc.prod.username}" cmcpass="${cmc.prod.password}" serverurl="${prod.serverurl}"/>
  </target>

  <!-- prodfix2prod commands ****************** -->

  <!-- SYNTAX: ant prodfix2local -Dversion=3.8 -Dsource=prodfix-->
  <target name="prodfix2local">
    <mkdir dir="${source} sprint ${version}" />
    <sf:retrieve
      username="${cmc.prodfix.username}"
      password="${cmc.prodfix.password}"
      serverurl="${sandbox.serverurl}"
      pollWaitMillis="10000"
      maxPoll="5000"
      unpackaged="package-${version}.xml"
      retrieveTarget="${source} sprint ${version}" />
  </target>

  <!-- OTHER RARE commands ****************** -->

  <!-- prodfix2prod commands ****************** -->

  <!-- SYNTAX: ant prod2local -Dversion=3.8 -Dsource=prod-->
  <target name="prod2local">
    <mkdir dir="${source} sprint ${version}" />
    <sf:retrieve
      username="${cmc.prod.username}"
      password="${cmc.prod.password}"
      serverurl="${prod.serverurl}"
      pollWaitMillis="10000"
      maxPoll="5000"
      unpackaged="package-${version}.xml"
      retrieveTarget="${source} sprint ${version}" />
  </target>

  <!-- SYNTAX: ant backup-dev -Dtype=package|destructiveChanges -Dversion=3.6 change for story S-502094 starts-->
  <target name="backup-dev" depends="check-files-exist" if="${type}.exists">
    <mkdir dir="dev backup ${type}-${version}" />
    <sf:retrieve
      username="${cmc.dev.username}"
      password="${cmc.dev.password}"
      serverurl="${sandbox.serverurl}"
      pollWaitMillis="10000"
      maxPoll="5000"
      unpackaged="${type}-${version}.xml"
      retrieveTarget="dev backup ${type}-${version}" />
  </target>

  <!-- SYNTAX: ant local2dev -Dversion=3.6 -Dsource=full    optional: -DcheckOnly=true -DrunAllTests=true -->
  <target name="local2dev">
    <antcall target="backup-dev">
        <param name="version" value="${version}" />
        <param name="type" value="package" />
    </antcall>
    <antcall target="backup-dev">
        <param name="version" value="${version}" />
        <param name="type" value="destructiveChanges" />
	</antcall>
    <antcall target="copy-destructiveChanges">
      <param name="version" value="${version}" />
      <param name="source" value="${source}" />
    </antcall>
    <sf:deploy
      username="${cmc.dev.username}"
      password="${cmc.dev.password}"
      serverurl="${sandbox.serverurl}"
      pollWaitMillis="20000"
      maxPoll="5000"
      checkOnly="${checkOnly}"
      runAllTests="${runAllTests}"
      deployRoot="${source} sprint ${version}"
    />
  </target>
  
  <!-- SYNTAX: ant local2dev-specified-tests -Dversion=3.6 -Dsource=qa -DspecifiedTests=TestClass1,TestClass2   optional: -DcheckOnly=true -DrunAllTests=true -->
  <target name="local2dev-specified-tests">
     <!-- backup dev first -->
     <antcall target="backup-dev">
       <param name="version" value="${version}" />
	  <param name="type" value="package" />
	 </antcall>
	 <antcall target="backup-dev">
       <param name="version" value="${version}" />
       <param name="type" value="destructiveChanges" />
     </antcall>
     <antcall target="copy-destructiveChanges">
       <param name="version" value="${version}" />
       <param name="source" value="${source}" />
     </antcall>
     <!-- deploy script -->
	 <scepcificTest cmcuser="${cmc.dev.username}" cmcpass="${cmc.dev.password}" serverurl="${sandbox.serverurl}"/>
  </target>

  <!-- SYNTAX: ant local2prodfix -Dfolder=XXXXXXXXX    optional: -DcheckOnly=true -DrunAllTests=true -->
  <target name="local2prodfix">
    <!-- NOTE: this does not copy destructiveChanges.xml to the folder first -->
    <sf:deploy
      username="${cmc.prodfix.username}"
      password="${cmc.prodfix.password}"
      serverurl="${sandbox.serverurl}"
      pollWaitMillis="20000"
      maxPoll="5000"
      checkOnly="${checkOnly}"
      runAllTests="${runAllTests}"
      deployRoot="${folder}">
    </sf:deploy>
  </target>
  
</project>
